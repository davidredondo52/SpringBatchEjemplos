<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch.xsd">
    
       
    
    <!-- JOB PARA LEER UN FICHERO DE TEXTO CON PERSONAS Y PRODUCTOS-->
	<batch:job id="importEmpleadosProducts" restartable="true">
		
			<!--lectura de fichero de texto plano Y ESCRITURA en Base de Datos-->
		<batch:step id="readWrite" >
			<batch:tasklet>
				<batch:chunk reader="readerEmplProd" writer="jdbcWriter"
					commit-interval="3" skip-limit="5">
					<batch:skippable-exception-classes>
						<batch:include
							class="org.springframework.batch.item.file.FlatFileParseException" />
					</batch:skippable-exception-classes>
				</batch:chunk>
				
			</batch:tasklet>			
		</batch:step>
		
	</batch:job>

		
	<!-- BEAN PARA LEER FICHERO -->
	<bean id="readerEmplProd" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource"
			value="file:#{ jobParameters['targetDir'] + jobParameters['targetFile'] }" />
		<property name="comments" value="#" />	
		<property name="lineMapper" ref="productEmpleadoLineMapper" />	
	</bean>


      <bean id="productEmpleadoLineMapper"
            class="org.springframework.batch.item.file.mapping.PatternMatchingCompositeLineMapper">
        <property name="tokenizers">
            <map>
                <entry key="P*" value-ref="productoLineTokenizer"/>
                <entry key="*" value-ref="empleadoLineTokenizer"/>
            </map>
        </property>
        <property name="fieldSetMappers">
            <map>
                <entry key="P*" value-ref="productFieldSetMapper"/>
                <entry key="*" value-ref="empleadoFieldSetMapper"/>
            </map>
        </property>
     </bean>
     
	<!-- TOKENIZERS-->
	<bean id="empleadoLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="names" value="cif,nombre,apellidos,edad"></property>		
		<property name="delimiter" value="," />
	</bean>
	
	<bean id="productoLineTokenizer"
		class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
		<property name="names" value="id,nombre,descripcion,precio"></property>
		<property name="delimiter" value="," />
	</bean>


	<!-- MAPPERS -->
	<bean id="empleadoFieldSetMapper"
            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
        <property name="prototypeBeanName" value="empleado"/>
    </bean>
    
    <bean id="empleado"
            class="profe.springbatch.empleado.model.Empleado" scope="prototype"></bean>
            
   
	
	<bean id="productFieldSetMapper"
            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
        <property name="prototypeBeanName" value="producto"/>
    </bean>
    
    <bean id="producto"
            class="profe.springbatch.products.model.Product" scope="prototype"></bean>
	
	<!-- WRITTER -->
	<bean id="jdbcWriter" class="profe.springbatch.batch.JdbcItemWriter"
		scope="step">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

</beans>