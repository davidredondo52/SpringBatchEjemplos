<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch.xsd">

	<!-- JOB CON 3 STEPS LEEMOS DE FICHERO DE TEXTO PLANO TEXTO MULTIPLE Y JSON 
		EN TODOS LOS CASOS ESCRIBIMOS EN LA BASE DE DATOS TODOS LOS OBJETOS SON EMPLEADOS -->
	<batch:job id="importEmpleados" restartable="true">

		<!--caso 1 lectura de fichero de texto plano de 1 linea -->
		<batch:step id="readWriteEmpleados">
			<batch:tasklet>
				<batch:chunk reader="empleadoItemReader" writer="empleadoItemWriter"
					commit-interval="3" skip-limit="5">

					<batch:streams>
						<batch:stream ref="empleadosMenoresFileWriter" />
						<batch:stream ref="empleadosMayoresFileWriter" />

					</batch:streams>
					<batch:skippable-exception-classes>
						<batch:include
							class="org.springframework.batch.item.file.FlatFileParseException" />
					</batch:skippable-exception-classes>
				</batch:chunk>

			</batch:tasklet>
		</batch:step>
	</batch:job>

	<!-- BEAN PARA LEER FICHERO -->
	<bean id="empleadoItemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">
		<property name="dataSource" ref="dataSource" />
		<property name="sql"
			value="select cif,nombre,apellidos,edad from empleados" />
		<property name="rowMapper" ref="empleadoRowMapper" />
	</bean>


	<bean id="empleadoRowMapper" class="profe.springbatch.empleado.batch.EmpleadoRowMapper" />

	<bean id="empleadoItemWriter"
		class="org.springframework.batch.item.support.ClassifierCompositeItemWriter">
		<property name="classifier">
			<bean class="org.springframework.classify.BackToBackPatternClassifier">
				<property name="routerDelegate">
					<bean class="profe.springbatch.empleado.batch.EmpleadoClassifier" />
				</property>
				<property name="matcherMap">
					<map>
						<entry key="menor" value-ref="empleadosMenoresFileWriter" />
						<entry key="mayor" value-ref="empleadosMayoresFileWriter" />

					</map>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="empleadosMenoresFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:target/outputs/empleados_menores.txt" />
		<property name="encoding" value="cp1252" />
		<property name="lineAggregator" ref="empleadoMenorAgregator" />

	</bean>

	<bean id="empleadosMayoresFileWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<property name="resource" value="file:target/outputs/empleados_mayores.txt" />
		<property name="encoding" value="cp1252" />
		<property name="lineAggregator" ref="empleadoMayorAgregator" />

	</bean>

	<bean id="empleadoMenorAgregator"
		class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
		<property name="delimiter" value="#" />
		<property name="fieldExtractor" ref="extractorEmpleado" />
	</bean>


	<bean id="empleadoMayorAgregator"
		class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">

		<property name="fieldExtractor" ref="extractorEmpleado" />
	</bean>
	<bean id="extractorEmpleado" class="profe.springbatch.empleado.batch.EmpleadoFieldExtractor" />
</beans>