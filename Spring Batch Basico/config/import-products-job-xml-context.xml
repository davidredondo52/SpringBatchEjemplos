<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:oxm="http://www.springframework.org/schema/oxm"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/oxm
    http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd">



	<!-- JOB PARA LEER UN FICHERO DE TEXTO CON PERSONAS Y PRODUCTOS -->
	<batch:job id="importProductsXml" restartable="true">

		<!--lectura de fichero de texto plano Y ESCRITURA en Base de Datos -->
		<batch:step id="readWrite">
			<batch:tasklet>
				<batch:chunk reader="productsXMLReader" writer="jdbcWriter"
					commit-interval="8" skip-limit="5">
					<batch:skippable-exception-classes>
						<batch:include
							class="profe.springbatch.batch.exceptions.JobError" />
						<batch:include
							class="org.springframework.batch.item.file.FlatFileParseException" />
					
					</batch:skippable-exception-classes>
					
						
				
				</batch:chunk>

			</batch:tasklet>
		</batch:step>

	</batch:job>


	<!-- BEAN PARA LEER FICHERO -->
	<bean id="productsXMLReader" class="org.springframework.batch.item.xml.StaxEventItemReader"
		scope="step">		
		<property name="resource" value="file:#{ jobParameters['targetDir'] + jobParameters['targetFile'] }"/>
		<property name="unmarshaller" ref="ProductUnmarshaller" />
		<property name="fragmentRootElementName" value="product" />		 
	</bean>

	<bean id="ProductUnmarshaller" class="org.springframework.oxm.castor.CastorMarshaller" scope="step">
		
		<property name="mappingLocation"
				value="file:#{ jobParameters['targetDir'] + jobParameters['productsMappingFile'] }"/>
		
	</bean>




	<!-- WRITTER -->
	<bean id="jdbcWriter" class="profe.springbatch.products.batch.ProductJdbcItemWriter"
		scope="step">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

</beans>